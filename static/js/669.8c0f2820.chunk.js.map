{"version":3,"file":"static/js/669.8c0f2820.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactsItem/ContactsItem.module.css?8722","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.jsx","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsView/ContactsView.jsx","styles/Box.js","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactsItem_contact__3h39i\",\"name\":\"ContactsItem_name__woMRI\",\"number\":\"ContactsItem_number__hMcY4\",\"button\":\"ContactsItem_button__uPo7U\"};","import style from './ContactsItem.module.css';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport { contactsSlice } from 'redux/contacts';\nimport { LoaderMini } from 'components/Loader/Loader';\n\nfunction ContactsItem({ contact }) {\n  const [deleteTodo, { isLoading: isDeleting }] =\n    contactsSlice.useDeleteContactMutation();\n\n  return (\n    <li className={style.contact}>\n      <p className={style.name}>{contact.name} :</p>\n      <p className={style.number}>{contact.number}</p>\n\n      <button\n        className={style.button}\n        type=\"button\"\n        onClick={() => deleteTodo(contact.id) && Notiflix.Notify.failure(`${contact.name} Delete in contacts`)}\n        disabled={isDeleting}\n      >\n        {isDeleting ? <LoaderMini /> : <span>Delete</span>}\n      </button>\n    </li>\n  );\n}\n\nContactsItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactsItem;\n","import { useSelector } from 'react-redux';\n\nimport style from './ContactList.module.css';\nimport { Loader } from 'components/Loader/Loader';\nimport { filterSlice, contactsSlice } from 'redux/contacts';\nimport ContactsItem from 'components/ContactsItem';\n\nfunction ContactList() {\n  const { data: contacts, isLoading: loadingList } =\n    contactsSlice.useFetchContactsQuery();\n  const filterValue = useSelector(filterSlice.getFilter);\n\n  const getContactsFilter = () => {\n    const normalizedFilter = filterValue.toLocaleLowerCase();\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizedFilter)\n      )\n    );\n  };\n  const contactsFilter = getContactsFilter();\n\n  return (\n    <div>\n      {loadingList && <Loader />}\n      {contacts && (\n        <ol className={style.contacts}>\n          {contactsFilter.map(contact => (\n            <ContactsItem key={contact.id} contact={contact} />\n          ))}\n        </ol>\n      )}\n    </div>\n  );\n}\n\nexport default ContactList;\n","import { useState } from 'react';\nimport style from './Form.module.css';\nimport { contactsSlice } from 'redux/contacts';\nimport { Loader } from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\n\nfunction Form() {\n  const [createContact, { isLoading }] =\n    contactsSlice.useCreateContactMutation();\n  const { data: contacts } = contactsSlice.useFetchContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  \n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    const contact = { name, number };\n    e.preventDefault();\n    const normalzeName = contact.name.toLocaleLowerCase();\n    if (contacts.find(item => item.name.toLocaleLowerCase() === normalzeName)) {\n      return Notiflix.Notify.failure(`${contact.name} is already in contacts`);      \n    }\n    await createContact(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={style.label}>\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={style.input}\n        />\n      </label>\n      <label className={style.label}>\n        <span>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={style.input}\n        />\n      </label>\n      <div className={style.buttonDiv}>\n        <button type=\"submit\" className={style.button}>\n          {isLoading ? <Loader /> : <div> Add contact</div>}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterSlice } from 'redux/contacts';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(filterSlice.getFilter);\n\n  const changeFilter = e => {\n    dispatch(filterSlice.filterItems(e.currentTarget.value));\n  };\n\n  return (\n    <label className={style.label}>\n      <span>Search by name:</span>\n      <input\n        type=\"text\"\n        placeholder=\"enter a name...\"\n        value={value}\n        onChange={changeFilter}\n        className={style.input}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import ContactList from 'components/ContactList';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport { Box } from 'styles/Box';\n\nconst ContactsView = () => {\n  return (\n    <Box display=\"flex\" align-items=\"center\" flexDirection=\"column\" >\n      <Form />\n      <Box display=\"flex\" align-items=\"center\" flexDirection=\"column\">\n        <Filter />\n        <ContactList />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ContactsView;\n","import styled from '@emotion/styled';\n\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Form_label__8nx+5\",\"button\":\"Form_button__8NOIT\",\"buttonDiv\":\"Form_buttonDiv__Hu9Rs\",\"input\":\"Form_input__FTtTw\"};"],"names":["contact","contactsSlice","useDeleteContactMutation","deleteTodo","isDeleting","isLoading","className","style","name","number","type","onClick","id","Notiflix","disabled","Loader","L","useFetchContactsQuery","contacts","data","loadingList","filterValue","useSelector","filterSlice","getFilter","contactsFilter","normalizedFilter","toLocaleLowerCase","filter","includes","getContactsFilter","map","useCreateContactMutation","createContact","useState","setName","setNumber","handleChange","evt","currentTarget","value","handleSubmit","e","preventDefault","normalzeName","find","item","reset","onSubmit","pattern","title","required","onChange","dispatch","useDispatch","placeholder","filterItems","Box","display","flexDirection","styled","color","space","layout","flexbox","background","border"],"sourceRoot":""}