{"version":3,"file":"static/js/612.f648c8f8.chunk.js","mappings":"uPAEaA,EAAeC,EAAAA,EAAAA,GAAH,qEAKZC,EAAmBD,EAAAA,EAAAA,GAAH,gKAShBE,EAAmBF,EAAAA,EAAAA,EAAH,gEAKhBG,EAAeH,EAAAA,EAAAA,OAAH,2b,SCNZI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAGpBC,GAFSF,EAAAA,EAAAA,IAAYG,EAAAA,IAEIC,cACzBC,EAAmBN,EAAMO,QAAO,SAAAC,GAAM,OAC1CA,EAAOC,KAAKJ,cAAcK,SAASP,MAWrC,OAJAQ,EAAAA,EAAAA,YAAU,WACRb,GAASc,EAAAA,EAAAA,SACR,CAACd,KAGF,SAACN,EAAD,UACGc,EAAiBO,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIL,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OACjC,OACE,UAACrB,EAAD,WACGe,EADH,KACS,SAACd,EAAD,UAAmBoB,KAC1B,SAACnB,EAAD,CACEoB,KAAK,SACLC,QAAS,WAhBC,IAAAC,EAAAA,EAiBMJ,EAhB1BhB,GAASqB,EAAAA,EAAAA,IAAWD,KAaZ,sBAFqBJ,SCrCjC,EAAwB,oBAAxB,EAAqD,qBAArD,EAAsF,wBAAtF,EAAsH,oB,6BC4DtH,MAvDA,WACE,IAAMhB,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAoB1B,OACE,kBAAMkB,SAnBa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAa,CACjBd,KAAMY,EAAOZ,KACbM,OAAQM,EAAON,QAGff,EAAMwB,MAAK,SAAAC,GAAI,OACbA,EAAKhB,KAAKJ,cAAcK,SAASa,EAAWd,KAAKJ,kBAGnDqB,IAAAA,KAAA,UAAiBH,EAAWd,KAA5B,6BAGAX,GAAS6B,EAAAA,EAAAA,IAAQJ,IAEnBD,MAIA,WACE,mBAAOM,UAAWC,EAAlB,WACE,oCACA,kBACEb,KAAK,OACLP,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRJ,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,WACE,sCACA,kBACEb,KAAK,MACLP,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRJ,UAAWC,QAGf,gBAAKD,UAAWC,EAAhB,UACE,mBAAQb,KAAK,SAASY,UAAWC,EAAjC,UACwB,kDCrDhC,EAAwB,sBAAxB,EAAsD,sBCuBtD,MAnBA,WACE,IAAM/B,GAAWC,EAAAA,EAAAA,MACXQ,GAASN,EAAAA,EAAAA,IAAYG,EAAAA,IAE5B,OACE,mBAAOwB,UAAWC,EAAlB,WACE,+CACA,kBACEb,KAAK,OACLiB,YAAY,kBACZxB,KAAK,SACLyB,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAItC,GAASuC,EAAAA,EAAAA,IAAYD,EAAEE,cAAcJ,SACpDN,UAAWC,Q,UCDlB,EAZiB,WACf,OACE,UAACU,EAAA,EAAD,CAAKC,QAAQ,OAAO,cAAY,SAASC,cAAc,SAAvD,WACE,SAAC,EAAD,KACA,UAACF,EAAA,EAAD,CAAKC,QAAQ,OAAO,cAAY,SAASC,cAAc,SAAvD,WACE,SAAC,EAAD,KACA,SAAC5C,EAAD,Y,4ECAK0C,GAAM9C,EAAAA,EAAAA,GAAO,MAAPA,CACjBiD,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsView/ContactsView.jsx","styles/Box.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactsListItem = styled.li`\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsListText = styled.p`\n  margin: 0 15px;\n  font-size: large;\n`;\n\nexport const ButtonDelete = styled.button`\n  display: inline-block;\n  padding: 10px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  color: #fff;\n  background-color: #ffc20b;\n  border: none;\n  border-radius: 15px;\n  box-shadow: 0 7px #999;  \n   &:hover {background-color: rgb(247, 90, 90)};\n   &:active {\n  background-color: red;\n  box-shadow: 0 5px #666;\n  transform: translateY(4px)}`;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  deleteItem,\n  getContact,\n  getFilterWord,\n  fetchContacts,\n} from 'redux/contactsSlice';\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListText,\n  ButtonDelete,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const items = useSelector(getContact);\n  const filter = useSelector(getFilterWord);\n\n  const normalizedValue = filter.toLowerCase();\n  const filteredContacts = items.filter(option =>\n    option.name.toLowerCase().includes(normalizedValue)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteItem(contactId));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactsListItem key={id}>\n            {name}:<ContactsListText>{number}</ContactsListText>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => {\n                deleteContact(id);\n              }}\n            >\n              Delate\n            </ButtonDelete>\n          </ContactsListItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Form_label__8nx+5\",\"button\":\"Form_button__8NOIT\",\"buttonDiv\":\"Form_buttonDiv__Hu9Rs\",\"input\":\"Form_input__FTtTw\"};","import style from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItem, getContact } from 'redux/contactsSlice';\nimport { Loader } from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const items = useSelector(getContact);\n \n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n    if (\n      items.find(item =>\n        item.name.toLowerCase().includes(newContact.name.toLowerCase())\n      )\n    ) {\n      Notiflix.info(`${newContact.name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addItem(newContact));\n    }\n    resetForm();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={style.label}>\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={style.input}\n        />\n      </label>\n      <label className={style.label}>\n        <span>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required        \n          className={style.input}\n        />\n      </label>\n      <div className={style.buttonDiv}>\n        <button type=\"submit\" className={style.button}>\n          {false ? <Loader /> : <div> Add contact</div>}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterItems, getFilterWord } from 'redux/contactsSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterWord);\n\n return (\n   <label className={style.label}>\n     <span>Search by name:</span>\n     <input\n       type=\"text\"\n       placeholder=\"enter a name...\"\n       name=\"filter\"\n       value={filter}\n       onChange={e => dispatch(filterItems(e.currentTarget.value))}\n       className={style.input}\n     />\n   </label>\n );\n}\n\nexport default Filter;\n","import {ContactList} from 'components/ContactList/ContactList';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from 'styles/Box';\n\nconst Contacts = () => {\n  return (\n    <Box display=\"flex\" align-items=\"center\" flexDirection=\"column\" >\n      <Form />\n      <Box display=\"flex\" align-items=\"center\" flexDirection=\"column\">\n        <Filter />\n        <ContactList />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border\n);\n"],"names":["ContactsList","styled","ContactsListItem","ContactsListText","ButtonDelete","ContactList","dispatch","useDispatch","items","useSelector","getContact","normalizedValue","getFilterWord","toLowerCase","filteredContacts","filter","option","name","includes","useEffect","fetchContacts","map","id","number","type","onClick","contactId","deleteItem","onSubmit","values","resetForm","newContact","find","item","Notiflix","addItem","className","style","pattern","title","required","placeholder","value","onChange","e","filterItems","currentTarget","Box","display","flexDirection","color","space","layout","flexbox","background","border"],"sourceRoot":""}