{"version":3,"file":"static/js/610.14a432ac.chunk.js","mappings":"yOAGaA,GAASC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,sKCANE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,iQ,qICDLI,EAAeJ,EAAAA,EAAAA,GAAH,qEAKZK,EAAmBL,EAAAA,EAAAA,GAAH,gKAShBM,EAAmBN,EAAAA,EAAAA,EAAH,gEAKhBO,EAAeP,EAAAA,EAAAA,OAAH,2b,SCNZQ,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAGpBC,GAFSF,EAAAA,EAAAA,IAAYG,EAAAA,IAEIC,cACzBC,EAAmBN,EAAMO,QAAO,SAAAC,GAAM,OAC1CA,EAAOC,KAAKJ,cAAcK,SAASP,MAWrC,OAJAQ,EAAAA,EAAAA,YAAU,WACRb,GAASc,EAAAA,EAAAA,SACR,CAACd,KAGF,SAACL,EAAD,UACGa,EAAiBO,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIL,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OACjC,OACE,UAACrB,EAAD,WACGe,EADH,KACS,SAACd,EAAD,UAAmBoB,KAC1B,SAACnB,EAAD,CACEoB,KAAK,SACLC,QAAS,WAhBC,IAAAC,EAAAA,EAiBMJ,EAhB1BhB,GAASqB,EAAAA,EAAAA,IAAWD,KAaZ,sBAFqBJ,S,UCnCpBM,GAAY/B,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,qTAeTgC,EAAahC,EAAAA,EAAAA,OAAH,2cAuBViC,EAAYjC,EAAAA,EAAAA,MAAH,gH,6BCOtB,MAzCA,WACE,IAAMS,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAoB1B,OACE,SAAC,KAAD,CAAQqB,cAAe,CAAEd,KAAM,GAAIM,OAAQ,IAAMS,SAnB9B,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAa,CACjBlB,KAAMgB,EAAOhB,KACbM,OAAQU,EAAOV,QAGff,EAAM4B,MAAK,SAAAC,GAAI,OACbA,EAAKpB,KAAKJ,cAAcK,SAASiB,EAAWlB,KAAKJ,kBAGnDyB,IAAAA,KAAA,UAAiBH,EAAWlB,KAA5B,6BAGAX,GAASiC,EAAAA,EAAAA,IAAQJ,IAEnBD,MAIA,UACE,UAAC,IAAD,YACE,UAACJ,EAAD,mBAEE,SAACF,EAAD,CAAWJ,KAAK,OAAOP,KAAK,aAE9B,UAACa,EAAD,qBAEE,SAACF,EAAD,CAAWJ,KAAK,MAAMP,KAAK,eAE7B,SAACY,EAAD,CAAYL,KAAK,SAAjB,+BCvCR,EAAwB,sBAAxB,EAAsD,sBCuBtD,MAnBA,WACE,IAAMlB,GAAWC,EAAAA,EAAAA,MACXQ,GAASN,EAAAA,EAAAA,IAAYG,EAAAA,IAE5B,OACE,mBAAO4B,UAAWC,EAAlB,WACE,+CACA,kBACEjB,KAAK,OACLkB,YAAY,kBACZzB,KAAK,SACL0B,MAAO5B,EACP6B,SAAU,SAAAC,GAAC,OAAIvC,GAASwC,EAAAA,EAAAA,IAAYD,EAAEE,cAAcJ,SACpDH,UAAWC,Q,UCDlB,EAZiB,WACf,OACE,UAACO,EAAA,EAAD,CAAKC,QAAQ,OAAO,cAAY,SAASC,cAAc,SAAvD,WACE,SAAC,EAAD,KACA,UAACF,EAAA,EAAD,CAAKC,QAAQ,OAAO,cAAY,SAASC,cAAc,SAAvD,WACE,SAAC,EAAD,KACA,SAAC7C,EAAD,Y,4ECAK2C,GAAMnD,EAAAA,EAAAA,GAAO,MAAPA,CACjBsD,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA","sources":["components/ui/formik/FormEl.js","components/ui/formik/Input.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsView/ContactsView.jsx","styles/Box.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding-top: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n   height: 25px;\n   width: 350px;\n  outline: none;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 15px;\n  color: #757575;\n  font-family: inherit;\n\n  padding-left: 12px;  \n`;","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactsListItem = styled.li`\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsListText = styled.p`\n  margin: 0 15px;\n  font-size: large;\n`;\n\nexport const ButtonDelete = styled.button`\n  display: inline-block;\n  padding: 10px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  color: #fff;\n  background-color: #ffc20b;\n  border: none;\n  border-radius: 15px;\n  box-shadow: 0 7px #999;  \n   &:hover {background-color: rgb(247, 90, 90)};\n   &:active {\n  background-color: red;\n  box-shadow: 0 5px #666;\n  transform: translateY(4px)}`;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  deleteItem,\n  getContact,\n  getFilterWord,\n  fetchContacts,\n} from 'redux/contactsSlice';\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListText,\n  ButtonDelete,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const items = useSelector(getContact);\n  const filter = useSelector(getFilterWord);\n\n  const normalizedValue = filter.toLowerCase();\n  const filteredContacts = items.filter(option =>\n    option.name.toLowerCase().includes(normalizedValue)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteItem(contactId));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactsListItem key={id}>\n            {name}:<ContactsListText>{number}</ContactsListText>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => {\n                deleteContact(id);\n              }}\n            >\n              Delate\n            </ButtonDelete>\n          </ContactsListItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const InputForm = styled(Field)`\n  width: 400px;\n  height: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 15px;\n  color: #757575;\n  font-family: inherit;\n  padding-left: 12px;\n`;\n\nexport const ButtonForm = styled.button`\n  display: flex;\n  padding: 10px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n  color: #fff;\n  background-color: #ffc20b;\n  border: none;\n  border-radius: 15px;\n  justify-content: center;\n  box-shadow: 0 7px #999;\n  &:hover {\n    background-color: rgb(247, 90, 90);\n  }\n  &:active {\n    background-color: red;\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  color: #757575;\n`;","import { LabelForm, InputForm, ButtonForm } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItem, getContact } from 'redux/contactsSlice';\nimport Notiflix from 'notiflix';\nimport { FormEl} from 'components/ui/formik';\nimport { Formik } from 'formik';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const items = useSelector(getContact);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n    if (\n      items.find(item =>\n        item.name.toLowerCase().includes(newContact.name.toLowerCase())\n      )\n    ) {\n      Notiflix.info(`${newContact.name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addItem(newContact));\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <FormEl>\n        <LabelForm>\n          Name\n          <InputForm type=\"text\" name=\"name\" />\n        </LabelForm>\n        <LabelForm>\n          Number\n          <InputForm type=\"tel\" name=\"number\" />\n        </LabelForm>\n        <ButtonForm type=\"submit\">\n           Add contact\n        </ButtonForm>\n      </FormEl>\n    </Formik>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterItems, getFilterWord } from 'redux/contactsSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterWord);\n\n return (\n   <label className={style.label}>\n     <span>Search by name:</span>\n     <input\n       type=\"text\"\n       placeholder=\"enter a name...\"\n       name=\"filter\"\n       value={filter}\n       onChange={e => dispatch(filterItems(e.currentTarget.value))}\n       className={style.input}\n     />\n   </label>\n );\n}\n\nexport default Filter;\n","import {ContactList} from 'components/ContactList/ContactList';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from 'styles/Box';\n\nconst Contacts = () => {\n  return (\n    <Box display=\"flex\" align-items=\"center\" flexDirection=\"column\" >\n      <Form />\n      <Box display=\"flex\" align-items=\"center\" flexDirection=\"column\">\n        <Filter />\n        <ContactList />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border\n);\n"],"names":["FormEl","styled","Form","Input","Field","ContactsList","ContactsListItem","ContactsListText","ButtonDelete","ContactList","dispatch","useDispatch","items","useSelector","getContact","normalizedValue","getFilterWord","toLowerCase","filteredContacts","filter","option","name","includes","useEffect","fetchContacts","map","id","number","type","onClick","contactId","deleteItem","InputForm","ButtonForm","LabelForm","initialValues","onSubmit","values","resetForm","newContact","find","item","Notiflix","addItem","className","style","placeholder","value","onChange","e","filterItems","currentTarget","Box","display","flexDirection","color","space","layout","flexbox","background","border"],"sourceRoot":""}